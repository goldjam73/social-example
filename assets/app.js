angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope",function(o){o.$on("login",function(t,n){o.currentUser=n}),o.logout=function(){}}]),angular.module("app").controller("LoginCtrl",["$scope","$location","UserSvc",function(o,t,n){o.login=function(e,s){n.login(e,s).then(function(n){o.$emit("login",n.data),t.path("/")})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(o,t){o.postBody=null,o.addPost=function(){null!==o.postBody&&t.create({body:o.postBody}).success(function(t){o.postBody=null})},o.$on("ws:new_post",function(t,n){o.$apply(function(){o.posts.unshift(n)})}),t.fetch().success(function(t){o.posts=t})}]),angular.module("app").service("PostsSvc",["$http",function(o){this.fetch=function(){return o.get("/api/posts")},this.create=function(t){return o.post("/api/posts",t)}}]),angular.module("app").config(["$routeProvider",function(o){o.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"})}]),angular.module("app").service("UserSvc",["$http",function(o){var t=this;t.getUser=function(){return o.get("/api/users")},t.login=function(n,e){return o.post("/api/sessions",{username:n,password:e}).then(function(n){return t.token=n.data,o.defaults.headers.common["X-Auth"]=n.data,t.getUser()})}}]),angular.module("app").run(["$rootScope","$timeout",function(o,t){function n(){return"https:"===window.location.host?"wss://"+window.location.host:"ws://"+window.location.host}!function e(){var s=new WebSocket(n());s.onclose=function(){console.log("WebSocket closed. Reconnecting..."),t(e,1e4)},s.onmessage=function(t){var n=JSON.parse(t.data);o.$broadcast("ws:"+n.topic,n.data)}}()}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImFwcGxpY2F0aW9uLmN0cmwuanMiLCJsb2dpbi5jdHJsLmpzIiwicG9zdHMuY3RybC5qcyIsInBvc3RzLnN2Yy5qcyIsInJvdXRlcy5qcyIsInVzZXIuc3ZjLmpzIiwid2Vic29ja2V0cy5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwiY29udHJvbGxlciIsIiRzY29wZSIsIiRvbiIsIl8iLCJ1c2VyIiwiY3VycmVudFVzZXIiLCJsb2dvdXQiLCIkbG9jYXRpb24iLCJVc2VyU3ZjIiwibG9naW4iLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwidGhlbiIsInJlc3BvbnNlIiwiJGVtaXQiLCJkYXRhIiwicGF0aCIsIlBvc3RzU3ZjIiwicG9zdEJvZHkiLCJhZGRQb3N0IiwiY3JlYXRlIiwiYm9keSIsInN1Y2Nlc3MiLCJwb3N0IiwiJGFwcGx5IiwicG9zdHMiLCJ1bnNoaWZ0IiwiZmV0Y2giLCJzZXJ2aWNlIiwiJGh0dHAiLCJ0aGlzIiwiZ2V0IiwiY29uZmlnIiwiJHJvdXRlUHJvdmlkZXIiLCJ3aGVuIiwidGVtcGxhdGVVcmwiLCJzdmMiLCJnZXRVc2VyIiwidmFsIiwidG9rZW4iLCJkZWZhdWx0cyIsImhlYWRlcnMiLCJjb21tb24iLCJydW4iLCIkcm9vdFNjb3BlIiwiJHRpbWVvdXQiLCJ3ZWJTb2NrZXRIb3N0Iiwid2luZG93IiwibG9jYXRpb24iLCJob3N0IiwiY29ubmVjdCIsImNvbm5lY3Rpb24iLCJXZWJTb2NrZXQiLCJvbmNsb3NlIiwiY29uc29sZSIsImxvZyIsIm9ubWVzc2FnZSIsImUiLCJwYXlsb2FkIiwiSlNPTiIsInBhcnNlIiwiJGJyb2FkY2FzdCIsInRvcGljIl0sIm1hcHBpbmdzIjoiQUFBQUEsUUFBQUMsT0FBQSxPQUNBLFlDREFELFFBQUFDLE9BQUEsT0FDQUMsV0FBQSxtQkFBQSxTQUFBLFNBQUFDLEdBQ0FBLEVBQUFDLElBQUEsUUFBQSxTQUFBQyxFQUFBQyxHQUNBSCxFQUFBSSxZQUFBRCxJQUVBSCxFQUFBSyxPQUFBLGdCQ0xBUixRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsYUFBQSxTQUFBLFlBQUEsVUFBQSxTQUFBQyxFQUFBTSxFQUFBQyxHQUNBUCxFQUFBUSxNQUFBLFNBQUFDLEVBQUFDLEdBQ0FILEVBQUFDLE1BQUFDLEVBQUFDLEdBQ0FDLEtBQUEsU0FBQUMsR0FDQVosRUFBQWEsTUFBQSxRQUFBRCxFQUFBRSxNQUNBUixFQUFBUyxLQUFBLFdDTkFsQixRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsaUNBQ0EsU0FBQUMsRUFBQWdCLEdBQ0FoQixFQUFBaUIsU0FBQSxLQUVBakIsRUFBQWtCLFFBQUEsV0FDQSxPQUFBbEIsRUFBQWlCLFVBQ0FELEVBQUFHLFFBQ0FDLEtBQUFwQixFQUFBaUIsV0FDQUksUUFBQSxTQUFBQyxHQUVBdEIsRUFBQWlCLFNBQUEsUUFLQWpCLEVBQUFDLElBQUEsY0FBQSxTQUFBQyxFQUFBb0IsR0FDQXRCLEVBQUF1QixPQUFBLFdBQ0F2QixFQUFBd0IsTUFBQUMsUUFBQUgsT0FJQU4sRUFBQVUsUUFDQUwsUUFBQSxTQUFBRyxHQUNBeEIsRUFBQXdCLE1BQUFBLE9DeEJBM0IsUUFBQUMsT0FBQSxPQUNBNkIsUUFBQSxvQkFDQSxTQUFBQyxHQUNBQyxLQUFBSCxNQUFBLFdBQ0EsTUFBQUUsR0FBQUUsSUFBQSxlQUVBRCxLQUFBVixPQUFBLFNBQUFHLEdBQ0EsTUFBQU0sR0FBQU4sS0FBQSxhQUFBQSxPQ1BBekIsUUFBQUMsT0FBQSxPQUNBaUMsUUFBQSxpQkFBQSxTQUFBQyxHQUNBQSxFQUNBQyxLQUFBLEtBQ0FsQyxXQUFBLFlBQ0FtQyxZQUFBLGVBRUFELEtBQUEsYUFDQWxDLFdBQUEsZUFDQW1DLFlBQUEsa0JBRUFELEtBQUEsVUFDQWxDLFdBQUEsWUFDQW1DLFlBQUEsa0JDYkFyQyxRQUFBQyxPQUFBLE9BQ0E2QixRQUFBLFdBQUEsUUFBQSxTQUFBQyxHQUNBLEdBQUFPLEdBQUFOLElBQ0FNLEdBQUFDLFFBQUEsV0FDQSxNQUFBUixHQUFBRSxJQUFBLGVBRUFLLEVBQUEzQixNQUFBLFNBQUFDLEVBQUFDLEdBQ0EsTUFBQWtCLEdBQUFOLEtBQUEsaUJBQ0FiLFNBQUFBLEVBQ0FDLFNBQUFBLElBQ0FDLEtBQUEsU0FBQTBCLEdBR0EsTUFGQUYsR0FBQUcsTUFBQUQsRUFBQXZCLEtBQ0FjLEVBQUFXLFNBQUFDLFFBQUFDLE9BQUEsVUFBQUosRUFBQXZCLEtBQ0FxQixFQUFBQyxnQkNiQXZDLFFBQUFDLE9BQUEsT0FDQTRDLEtBQUEsYUFBQSxXQUFBLFNBQUFDLEVBQUFDLEdBQ0EsUUFBQUMsS0FDQSxNQUFBLFdBQUFDLE9BQUFDLFNBQUFDLEtBQ0EsU0FBQUYsT0FBQUMsU0FBQUMsS0FFQSxRQUFBRixPQUFBQyxTQUFBQyxNQUdBLFFBQUFDLEtBQ0EsR0FBQUMsR0FBQSxHQUFBQyxXQUFBTixJQUNBSyxHQUFBRSxRQUFBLFdBQ0FDLFFBQUFDLElBQUEscUNBQ0FWLEVBQUFLLEVBQUEsTUFFQUMsRUFBQUssVUFBQSxTQUFBQyxHQUNBLEdBQUFDLEdBQUFDLEtBQUFDLE1BQUFILEVBQUExQyxLQUNBNkIsR0FBQWlCLFdBQUEsTUFBQUgsRUFBQUksTUFBQUosRUFBQTNDIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCdhcHAnLCBbXHJcblx0J25nUm91dGUnXHJcbl0pOyIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uY29udHJvbGxlcignQXBwbGljYXRpb25DdHJsJywgZnVuY3Rpb24oJHNjb3BlKXtcclxuXHQkc2NvcGUuJG9uKCdsb2dpbicsIGZ1bmN0aW9uKF8sIHVzZXIpe1xyXG5cdFx0JHNjb3BlLmN1cnJlbnRVc2VyID0gdXNlcjtcclxuXHR9KTtcclxuXHQkc2NvcGUubG9nb3V0ID0gZnVuY3Rpb24oKXtcclxuXHRcdC8vXHJcblx0fTtcclxufSk7IiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXHJcblx0LmNvbnRyb2xsZXIoJ0xvZ2luQ3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgJGxvY2F0aW9uLCBVc2VyU3ZjKSB7XHJcblx0XHQkc2NvcGUubG9naW4gPSBmdW5jdGlvbih1c2VybmFtZSwgcGFzc3dvcmQpIHtcclxuXHRcdFx0VXNlclN2Yy5sb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpXHJcblx0XHRcdFx0LnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuXHRcdFx0XHRcdCRzY29wZS4kZW1pdCgnbG9naW4nLCByZXNwb25zZS5kYXRhKTtcclxuXHRcdFx0XHRcdCRsb2NhdGlvbi5wYXRoKCcvJyk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHR9O1xyXG5cdH0pOyIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG5cdC5jb250cm9sbGVyKCdQb3N0c0N0cmwnLFxyXG5cdFx0ZnVuY3Rpb24oJHNjb3BlLCBQb3N0c1N2Yykge1xyXG5cdFx0XHQkc2NvcGUucG9zdEJvZHkgPSBudWxsO1xyXG5cclxuXHRcdFx0JHNjb3BlLmFkZFBvc3QgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRpZiAoJHNjb3BlLnBvc3RCb2R5ICE9PSBudWxsKSB7XHJcblx0XHRcdFx0XHRQb3N0c1N2Yy5jcmVhdGUoe1xyXG5cdFx0XHRcdFx0XHRib2R5OiAkc2NvcGUucG9zdEJvZHlcclxuXHRcdFx0XHRcdH0pLnN1Y2Nlc3MoZnVuY3Rpb24ocG9zdCkge1xyXG5cdFx0XHRcdFx0XHQvLyRzY29wZS5wb3N0cy51bnNoaWZ0KHBvc3QpO1xyXG5cdFx0XHRcdFx0XHQkc2NvcGUucG9zdEJvZHkgPSBudWxsO1xyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9O1xyXG5cclxuXHRcdFx0JHNjb3BlLiRvbignd3M6bmV3X3Bvc3QnLCBmdW5jdGlvbihfLCBwb3N0KXtcclxuXHRcdFx0XHQkc2NvcGUuJGFwcGx5KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0JHNjb3BlLnBvc3RzLnVuc2hpZnQocG9zdCk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdFx0UG9zdHNTdmMuZmV0Y2goKVxyXG5cdFx0XHRcdC5zdWNjZXNzKGZ1bmN0aW9uKHBvc3RzKSB7XHJcblx0XHRcdFx0XHQkc2NvcGUucG9zdHMgPSBwb3N0cztcclxuXHRcdFx0XHR9KTtcclxuXHRcdH1cclxuXHQpOyIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG5cdC5zZXJ2aWNlKCdQb3N0c1N2YycsXHJcblx0XHRmdW5jdGlvbigkaHR0cCkge1xyXG5cdFx0XHR0aGlzLmZldGNoID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0cmV0dXJuICRodHRwLmdldCgnL2FwaS9wb3N0cycpO1xyXG5cdFx0XHR9O1xyXG5cdFx0XHR0aGlzLmNyZWF0ZSA9IGZ1bmN0aW9uKHBvc3QpIHtcclxuXHRcdFx0XHRyZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9wb3N0cycsIHBvc3QpO1xyXG5cdFx0XHR9O1xyXG5cdFx0fVxyXG5cdCk7IiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXHJcblx0LmNvbmZpZyhmdW5jdGlvbigkcm91dGVQcm92aWRlcikge1xyXG5cdFx0JHJvdXRlUHJvdmlkZXJcclxuXHRcdFx0LndoZW4oJy8nLCB7XHJcblx0XHRcdFx0Y29udHJvbGxlcjogJ1Bvc3RzQ3RybCcsXHJcblx0XHRcdFx0dGVtcGxhdGVVcmw6ICdwb3N0cy5odG1sJ1xyXG5cdFx0XHR9KVxyXG5cdFx0XHQud2hlbignL3JlZ2lzdGVyJywge1xyXG5cdFx0XHRcdGNvbnRyb2xsZXI6ICdSZWdpc3RlckN0cmwnLFxyXG5cdFx0XHRcdHRlbXBsYXRlVXJsOiAncmVnaXN0ZXIuaHRtbCdcclxuXHRcdFx0fSlcclxuXHRcdFx0LndoZW4oJy9sb2dpbicsIHtcclxuXHRcdFx0XHRjb250cm9sbGVyOiAnTG9naW5DdHJsJyxcclxuXHRcdFx0XHR0ZW1wbGF0ZVVybDogJ2xvZ2luLmh0bWwnXHJcblx0XHRcdH0pO1xyXG5cdH0pOyIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG5cdC5zZXJ2aWNlKCdVc2VyU3ZjJywgZnVuY3Rpb24oJGh0dHApIHtcclxuXHRcdHZhciBzdmMgPSB0aGlzO1xyXG5cdFx0c3ZjLmdldFVzZXIgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0cmV0dXJuICRodHRwLmdldCgnL2FwaS91c2VycycpO1xyXG5cdFx0fTtcclxuXHRcdHN2Yy5sb2dpbiA9IGZ1bmN0aW9uKHVzZXJuYW1lLCBwYXNzd29yZCkge1xyXG5cdFx0XHRyZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9zZXNzaW9ucycsIHtcclxuXHRcdFx0XHR1c2VybmFtZTogdXNlcm5hbWUsXHJcblx0XHRcdFx0cGFzc3dvcmQ6IHBhc3N3b3JkXHJcblx0XHRcdH0pLnRoZW4oZnVuY3Rpb24odmFsKSB7XHJcblx0XHRcdFx0c3ZjLnRva2VuID0gdmFsLmRhdGE7XHJcblx0XHRcdFx0JGh0dHAuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bJ1gtQXV0aCddID0gdmFsLmRhdGE7XHJcblx0XHRcdFx0cmV0dXJuIHN2Yy5nZXRVc2VyKCk7XHJcblx0XHRcdH0pO1xyXG5cdFx0fTtcclxuXHR9KTsiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuXHQucnVuKGZ1bmN0aW9uKCRyb290U2NvcGUsICR0aW1lb3V0KSB7XHJcblx0XHRmdW5jdGlvbiB3ZWJTb2NrZXRIb3N0KCkge1xyXG5cdFx0XHRpZiAod2luZG93LmxvY2F0aW9uLmhvc3QgPT09IFwiaHR0cHM6XCIpe1xyXG5cdFx0XHRcdHJldHVybiBcIndzczovL1wiICsgd2luZG93LmxvY2F0aW9uLmhvc3Q7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0cmV0dXJuIFwid3M6Ly9cIiArIHdpbmRvdy5sb2NhdGlvbi5ob3N0O1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHQoZnVuY3Rpb24gY29ubmVjdCgpIHtcclxuXHRcdFx0dmFyIGNvbm5lY3Rpb24gPSBuZXcgV2ViU29ja2V0KHdlYlNvY2tldEhvc3QoKSk7XHJcblx0XHRcdGNvbm5lY3Rpb24ub25jbG9zZSA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKCdXZWJTb2NrZXQgY2xvc2VkLiBSZWNvbm5lY3RpbmcuLi4nKTtcclxuXHRcdFx0XHQkdGltZW91dChjb25uZWN0LCAxMCAqIDEwMDApO1xyXG5cdFx0XHR9O1xyXG5cdFx0XHRjb25uZWN0aW9uLm9ubWVzc2FnZSA9IGZ1bmN0aW9uKGUpIHtcclxuXHRcdFx0XHR2YXIgcGF5bG9hZCA9IEpTT04ucGFyc2UoZS5kYXRhKTtcclxuXHRcdFx0XHQkcm9vdFNjb3BlLiRicm9hZGNhc3QoJ3dzOicgKyBwYXlsb2FkLnRvcGljLCBwYXlsb2FkLmRhdGEpO1xyXG5cdFx0XHR9O1xyXG5cdFx0fSkoKTtcclxuXHR9KTsiXX0=
