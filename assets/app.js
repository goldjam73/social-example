!function(){"use strict";function t(t,o){var n=this;n.login=function(){o.login(n.username,n.password).then(function(o){n.onUpdate({value:o.data}),t.path("/")})}}function o(){var t=this;t.addPost=function(){null!==t.postBody&&t.onUpdate({value:t.postBody})}}function n(t,o){var n=this;n.postBody=null,n.addPost=function(t){o.create({body:t}).then(function(){n.postBody=null})},t.$on("ws:new_post",function(o,e){t.$apply(function(){n.posts.unshift(e)})}),o.fetch().then(function(t){n.posts=t.data})}function e(){var t=this;t.login=function(o){t.currentUser=o},t.logout=function(){t.currentUser=null}}t.$inject=["$location","UserSvc"],n.$inject=["$scope","PostsSvc"],angular.module("social-app",["ngRoute"]).config(["$locationProvider",function(t){t.hashPrefix(""),t.html5Mode(!0)}]),angular.module("social-app").component("login",{controller:t,templateUrl:"login.html",bindings:{onUpdate:"&"}}),angular.module("social-app").component("postInput",{controller:o,templateUrl:"postinput.html",bindings:{postBody:"<",onUpdate:"&"}}),angular.module("social-app").component("postItem",{templateUrl:"postitem.html",bindings:{post:"<"}}),angular.module("social-app").component("posts",{controller:n,templateUrl:"posts.html"}),angular.module("social-app").service("PostsSvc",["$http",function(t){this.fetch=function(){return t.get("/api/posts")},this.create=function(o){return t.post("/api/posts",o)}}]),angular.module("social-app").config(["$routeProvider",function(t){t.when("/",{template:"<posts></posts>"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{template:'<login on-update="$ctrl.login(value)"></login>'})}]),angular.module("social-app").component("social",{controller:e,templateUrl:"social.html"}),angular.module("social-app").service("UserSvc",["$http",function(t){var o=this;o.getUser=function(){return t.get("/api/users")},o.login=function(n,e){return t.post("/api/sessions",{username:n,password:e}).then(function(n){return o.token=n.data,t.defaults.headers.common["X-Auth"]=n.data,o.getUser()})}}]),angular.module("social-app").run(["$rootScope","$timeout",function(t,o){function n(){return"https:"===window.location.host?"wss://"+window.location.host:"ws://"+window.location.host}!function e(){var a=new WebSocket(n());a.onclose=function(){console.log("WebSocket closed. Reconnecting..."),o(e,1e4)},a.onmessage=function(o){var n=JSON.parse(o.data);t.$broadcast("ws:"+n.topic,n.data)}}()}])}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
