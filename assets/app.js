!function(){"use strict";function t(t,n){var o=this;o.login=function(){n.login(o.username,o.password).then(function(n){o.onUpdate({value:n.data}),t.path("/")})}}function n(){var t=this;t.addPost=function(){null!==t.postBody&&t.onUpdate({value:t.postBody})}}function o(t,n){var o=this;o.postBody=null,o.addPost=function(t){n.create({body:t}).then(function(){o.postBody=null})},t.$on("ws:new_post",function(t,n){o.$apply(function(){o.posts.unshift(n)})}),n.fetch().then(function(t){o.posts=t.data})}t.$inject=["$location","UserSvc"],o.$inject=["$scope","PostsSvc"],angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",function(){var t=this;t.login=function(n){t.currentUser=n},t.logout=function(){}}),angular.module("app").component("login",{controller:t,templateUrl:"login.html",bindings:{onUpdate:"&"}}),angular.module("app").component("postInput",{controller:n,templateUrl:"postinput.html",bindings:{postBody:"<",onUpdate:"&"}}),angular.module("app").component("postItem",{templateUrl:"postitem.html",bindings:{post:"<"}}),angular.module("app").component("posts",{controller:o,templateUrl:"posts.html"}),angular.module("app").service("PostsSvc",["$http",function(t){this.fetch=function(){return t.get("/api/posts")},this.create=function(n){return t.post("/api/posts",n)}}]),angular.module("app").config(["$routeProvider",function(t){t.when("/",{template:"<posts></posts>"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{template:'<login on-update="$ctrl.login(value)"></login>'})}]),angular.module("app").service("UserSvc",["$http",function(t){var n=this;n.getUser=function(){return t.get("/api/users")},n.login=function(o,e){return t.post("/api/sessions",{username:o,password:e}).then(function(o){return n.token=o.data,t.defaults.headers.common["X-Auth"]=o.data,n.getUser()})}}]),angular.module("app").run(["$rootScope","$timeout",function(t,n){function o(){return"https:"===window.location.host?"wss://"+window.location.host:"ws://"+window.location.host}!function e(){var a=new WebSocket(o());a.onclose=function(){console.log("WebSocket closed. Reconnecting..."),n(e,1e4)},a.onmessage=function(n){var o=JSON.parse(n.data);t.$broadcast("ws:"+o.topic,o.data)}}()}])}();
//# sourceMappingURL=app.js.map
